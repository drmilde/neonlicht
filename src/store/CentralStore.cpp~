#include "CentralStore.h"


CentralStore::CentralStore() {
  // initalize data structures  
  midiQueue = MessageDataQueue();
  oscIn.talk = false; // do not write any messages to stdout
  std::thread lt = oscIn.startThread();
}

void CentralStore:: tick() {
  // do the update of the current state

  // has something fresh arrived om the Osc ?
  if (oscIn.isFresh()) {
    MessageData* data = oscIn.getData(); // get data
    
    if (data != NULL) { // don't copy empty data
      midiQueue.add(new MessageData(data)); // create new MessageData and put it into queue
      //std::cout << data->getV3() << ",";
    }    
  }
}

void CentralStore::clear() {
  // clear the Central Store
  midiQueue.clear();
}

MessageData* CentralStore::getData() {
  MessageData* data = midiQueue.get();
  if (data != NULL) {
    return data;
  }  else {
    return NULL;
  }  
}

